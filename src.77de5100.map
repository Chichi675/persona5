{"version":3,"sources":["lib/utils.ts","lib/box/BoxChar.ts","lib/box/BoxText.ts","web.ts","index.ts"],"names":[],"mappings":"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","file":"src.77de5100.map","sourceRoot":"../src","sourcesContent":["export function getCanvasAndContext(width: number, height: number) {\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n\n    const context = canvas.getContext('2d');\n    if (!context) {\n        throw new Error('Failed to create canvas');\n    }\n    return { canvas, context };\n}\n\nexport function getCharSize(char: string, fontSize: number, fontFamily = 'sans-serif', fontWeight = 'normal') {\n    const { context: ctx } = getCanvasAndContext(fontSize, fontSize);\n\n    const font = `${fontWeight} ${fontSize}px ${fontFamily}`;\n    ctx.font = font;\n    ctx.textBaseline = 'top';\n    ctx.fillText(char, 0, 0);\n\n    let count = 0;\n    let left = -1, right = fontSize, top = -1, bottom = fontSize;\n    const imageData = ctx.getImageData(0, 0, fontSize, fontSize).data;\n\n    // 遍历像素找包围盒\n    for (let i = 0; i < fontSize && count < 4; ++i) {\n        for (let j = 0; j < fontSize && count < 4; ++j) {\n            const topIndex = (i * fontSize + j) * 4;\n            const leftIndex = (i + j * fontSize) * 4;\n            if (top < 0 && imageData[topIndex + 3]) {\n                top = i;\n                ++count;\n            }\n            if (left < 0 && imageData[leftIndex + 3]) {\n                left = i;\n                ++count;\n            }\n            if (bottom == fontSize && imageData[imageData.length - topIndex - 1]) {\n                bottom = fontSize - i;\n                ++count;\n            }\n            if (imageData[imageData.length - leftIndex - 1]) {\n                right = fontSize - i;\n                ++count;\n            }\n        }\n    }\n    \n    const width = right - left, height = bottom - top;\n    return {\n        top,\n        left,\n        width,\n        height\n    };\n}\n\nexport function randomOp() {\n    return Math.floor(Math.random() * 10) % 2 ? 1 : -1;\n}\n\nexport function canvasRotate(context: CanvasRenderingContext2D, angle: number, x: number, y: number) {\n    context.translate(x, y);\n    context.rotate(Math.PI * angle / 180);\n    context.translate(-x, -y);\n}\n","import * as _ from '../utils';\n\nconst MAX_ANGLE = 10;\n\nexport enum COLORS {\n    RED = '#E5191C',\n    WHITE = '#FDFDFD',\n    BLACK = '#0F0F0F',\n};\n\nexport enum CHAR_MODE {\n    FIRST = 1,\n    WHITE = 2,\n    RED = 3,\n    SPACE = 4,\n};\n\nexport default class BoxChar {\n    static BorderScale = 1.4;\n    static BackgroundScale = 1.2;\n\n    char = '';\n    fontFamily = '';\n    fontSize = 0;\n    width = 0;\n    height = 0;\n    left = 0;\n    top = 0;\n    angle = 0;\n    scale = 0;\n    mode = CHAR_MODE.WHITE;\n    color = COLORS.WHITE;\n\n    constructor(char: string, mode: CHAR_MODE, fontSize = 60, fontFamily = 'sans-serif') {\n        this.char = char;\n        this.mode = mode;\n        this.fontFamily = fontFamily;\n\n        if (mode == CHAR_MODE.SPACE) {\n            return;\n        }\n        \n        const angle = -(Math.round(Math.random() * 10) % MAX_ANGLE);\n        if (mode == CHAR_MODE.FIRST) {\n            this.scale = 1.1;\n            this.angle = angle;\n        } else {\n            this.scale = 1 - Math.floor(Math.random() * 10) % 3 / 10;\n            this.angle = angle * _.randomOp();\n        }\n        this.fontSize = fontSize * this.scale;\n        \n        if (mode == CHAR_MODE.RED) {\n            this.color = COLORS.RED;\n        }\n        \n        const { width, height, top, left } = _.getCharSize(char, this.fontSize, this.fontFamily, 'bold');\n        this.width = width;\n        this.height = height;\n        this.top = top;\n        this.left = left;\n    }\n\n    get font() {\n        return `bold ${this.fontSize}px ${this.fontFamily}`;\n    }\n\n    get rotateSize() {\n        const angle = this.angle * Math.PI / 180;\n        const sin = Math.abs(Math.sin(angle)), cos = Math.abs(Math.cos(angle));\n        const width = Math.ceil(this.width * cos) + Math.ceil(this.height * sin);\n        const height = Math.ceil(this.height * cos) + Math.ceil(this.width * sin);\n        return {\n            width,\n            height\n        }\n    }\n\n    get outterSize() {\n        const { width, height } = this.rotateSize;\n        const scale = this.mode == CHAR_MODE.FIRST ? BoxChar.BorderScale : BoxChar.BackgroundScale;\n        return {\n            width: width * scale,\n            height: height * scale\n        };\n    }\n}\n","import * as _ from '../utils';\nimport BoxChar, { CHAR_MODE, COLORS } from './BoxChar';\n\ninterface BoxTextOptions {\n    fontSize?: number,\n    fontFamily?: string,\n    gutter?: number,\n    pendding?: number,\n}\n\nexport default class BoxText {\n    private chars: Array<BoxChar> = [];\n    private fontSize = 60;\n    private fontFamily = 'sans-serif';\n    private gutter = 5;\n    private pendding = 30;\n\n    constructor(text: string, options?: BoxTextOptions) {\n        if (options) {\n            const { fontSize, fontFamily, gutter, pendding } = options;\n            fontSize && (this.fontSize = fontSize);\n            fontFamily && (this.fontFamily = fontFamily);\n            gutter && (this.gutter = gutter);\n            pendding && (this.pendding = pendding);\n        }\n        if (!text) {\n            throw new Error('Must set text.');\n        }\n\n        const chars = text.toUpperCase().split('');\n        const modes = new Array<number>(chars.length).fill(CHAR_MODE.WHITE);\n        modes[0] = CHAR_MODE.FIRST;\n        // 随机选择标红的字，一定范围内只允许出现一次\n        const range = 5;\n        for (let i = 1; i < chars.length; i += range) {\n            for (let j = i; j < i + range - 1 && j < chars.length; ++j) {\n                if (Math.random() * 10 > 6) {\n                    modes[j] = CHAR_MODE.RED;\n                    break;\n                }\n            }\n        }\n\n        for (const [index, char] of chars.entries()) {\n            if (/^\\s$/.test(char)) {\n                this.chars.push(new BoxChar('', CHAR_MODE.SPACE));\n            } else {\n                this.chars.push(new BoxChar(char, modes[index], this.fontSize, this.fontFamily));\n            }\n        }\n    }\n\n    draw(canvas: HTMLCanvasElement) {\n        const ctx = canvas.getContext('2d');\n        if (!ctx) {\n            throw new Error('Failed to create canvas');\n        }\n\n        const pendding = this.pendding, gutter = this.gutter;\n        \n        let canvasWidth = pendding * 2, canvasHeight = 0;\n        for (const boxChar of this.chars) {\n            if (boxChar instanceof BoxChar) {\n                const size = boxChar.outterSize;\n                canvasWidth += (size.width + gutter);\n                canvasHeight = Math.max(canvasHeight, size.height);\n            } else {\n                canvasWidth += 2 * gutter;\n            }\n        }\n        let drawOffset = pendding;\n        canvasHeight = canvasHeight + pendding * 2;\n\n        canvas.height = canvasHeight;\n        canvas.width = canvasWidth;\n\n        ctx.fillStyle = COLORS.BLACK;\n        ctx.textBaseline = 'top';\n\n        for (const boxChar of this.chars) {\n            if (boxChar.mode == CHAR_MODE.SPACE) {\n                drawOffset += 2 * gutter;\n                continue;\n            }\n            \n            ctx.save();\n            let { char, top, left, width, height, angle, mode, color } = boxChar;\n\n            if (mode == CHAR_MODE.FIRST) {\n                const { width: borderWidth, height: borderHeight } = boxChar.outterSize;\n                const rotateX = drawOffset + borderWidth / 2, rotateY = pendding + borderHeight / 2;\n                _.canvasRotate(ctx, angle - 5, rotateX, rotateY);\n                ctx.fillStyle = COLORS.BLACK;\n                ctx.fillRect(drawOffset, (canvasHeight - borderHeight) / 2, borderWidth, borderHeight);\n\n                _.canvasRotate(ctx, 3, rotateX, rotateY);\n                const bgScale = 0.85;\n                const bgWidth = borderWidth * bgScale, bgHeight = borderHeight * bgScale;\n                const bgLeft = drawOffset + (borderWidth - bgWidth) / 2, bgTop = (canvasHeight - bgHeight) / 2;\n                ctx.fillStyle = COLORS.RED;\n                ctx.fillRect(bgLeft, bgTop, bgWidth, bgHeight);\n\n                _.canvasRotate(ctx, 2, rotateX, rotateY);\n                const textLeft = drawOffset + (borderWidth - width) / 2 - left, textTop = (canvasHeight - height) / 2 - top;\n                ctx.fillStyle = color;\n                ctx.font = boxChar.font;\n                ctx.fillText(char, textLeft, textTop);\n\n                drawOffset += boxChar.outterSize.width + gutter;\n            } else {\n                const { width: bgWidth, height: bgHeight } = boxChar.outterSize;\n\n                const rotateX = drawOffset + bgWidth / 2, rotateY = pendding + bgHeight / 2;\n                _.canvasRotate(ctx, angle + 1, rotateX, rotateY);\n                ctx.fillStyle = COLORS.BLACK;\n                ctx.fillRect(drawOffset, (canvasHeight - bgHeight) / 2, bgWidth, bgHeight);\n\n                const textLeft = drawOffset + (bgWidth - width) / 2 - left, textTop = (canvasHeight - height) / 2 - top;\n                _.canvasRotate(ctx, -1, rotateX, rotateY);\n                ctx.fillStyle = color;\n                ctx.font = boxChar.font;\n                ctx.fillText(char, textLeft, textTop);\n\n                drawOffset += boxChar.outterSize.width + gutter;\n            }\n\n            ctx.restore();\n        }\n\n        const imageData = ctx.getImageData(0, 0, canvasWidth, canvasHeight);\n        const newImageData = ctx.createImageData(canvasWidth, canvasHeight);\n\n        const coreSize = 6, start = Math.floor(coreSize / 2);\n        for (let i = start; i < imageData.height - start; ++i) {\n            for (let j = start; j < imageData.width - start; ++j) {\n                const index = i * imageData.width * 4 + j * 4;\n                if (!imageData.data[index + 3]) {\n                    continue;\n                }\n\n                const a = imageData.data[index + 3];\n                for (let x = i - coreSize + 1; x < i + coreSize; ++x) {\n                    for (let y = j - coreSize + 1; y < j + coreSize; ++y) {\n                        const newIndex = x * imageData.width * 4 + y * 4;\n                        newImageData.data[newIndex] = 255;\n                        newImageData.data[newIndex + 1] = 255;\n                        newImageData.data[newIndex + 2] = 255;\n                        newImageData.data[newIndex + 3] += a / 4;\n                    }\n                }\n            }\n        }\n\n        const { canvas: borderCanvas, context: borderCtx } = _.getCanvasAndContext(canvasWidth, canvasHeight);\n        borderCtx.putImageData(newImageData, 0, 0);\n\n        ctx.save();\n        ctx.globalCompositeOperation = 'destination-over';\n        ctx.drawImage(borderCanvas, 0, 0);\n\n        const step = canvasWidth / 10;\n        let width = step;\n        let isRed = true;\n        while (width < canvasWidth) {\n            ctx.beginPath();\n            ctx.arc(canvasWidth / 2, canvasHeight / 2, width, 0, 360);\n            ctx.closePath();\n            ctx.fillStyle = isRed ? COLORS.RED : COLORS.BLACK;\n            isRed = !isRed;\n            ctx.fill();\n            width += step;\n        }\n\n        ctx.restore();\n    }\n}\n","import BoxText from './lib/box/BoxText';\n\nexport default () => {\n    const contentInput = <HTMLInputElement>document.getElementById('contentInput');\n    const fontSizeInput = <HTMLInputElement>document.getElementById('fontSizeInput');\n    const fontFamilyInput = <HTMLInputElement>document.getElementById('fontFamilyInput');\n\n    const goButton = <HTMLInputElement>document.getElementById('goButton');\n    const saveButton = <HTMLInputElement>document.getElementById('saveButton');\n    const canvas = <HTMLCanvasElement>document.getElementById('canvas');\n\n    goButton.addEventListener('click', () => {\n        const value = (contentInput.value || '').trim();\n        if (!value) {\n            return;\n        }\n        const fontSize = Math.min(Math.abs(+fontSizeInput.value || 60));\n        const fontFamily = fontFamilyInput.value || 'sans-serif';\n        const box = new BoxText(value, {\n            fontSize,\n            fontFamily\n        });\n        box.draw(canvas);\n    });\n    goButton.click();\n\n    saveButton.addEventListener('click', () => {\n        const imageURL = canvas.toDataURL('image/png').replace('image/png', 'image/octet-stream');\n        const a = document.createElement('a');\n        a.href = imageURL;\n        a.download = `${contentInput.value}.png`;\n        a.target = 'blank';\n        a.click();\n    });\n};\n","import onload from './web';\n\nwindow.onload = onload;\n"]}